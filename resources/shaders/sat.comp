#version 430
#extension GL_ARB_shader_storage_buffer_object : require

precision highp float;

#define NUM_COLLIDER_VERTS 8u
#define MAX_NUM_COLLIDERS 1000u
#define MAX_NUM_PROJ_AXES 1000u

layout(local_size_x = MAX_NUM_PROJ_AXES) in;

struct BoxCollider
{
	vec4 vertices[NUM_COLLIDER_VERTS];
};

struct Manifold
{
	vec4 pointCount; // Wasteful, but it's ok.
	vec4 contactPoints;
	vec4 contactNormal;
};

layout(std430, binding = 0) readonly buffer in_collider_data
{
	BoxCollider boxColliders[];
};

layout(std430, binding = 1) readonly buffer in_collision_pair_data
{
	vec4 collisionPairs[2 * MAX_NUM_COLLIDERS];
};

layout(std430, binding = 2) writeonly buffer out_manifolds_data
{
	Manifold manifolds[MAX_NUM_COLLIDERS];
};

layout(binding = 3) uniform atomic_uint nextAvailableIndx;

// This function will create and append to the manifold buffer.
void separatingAxisTest( )
{

}

// We gonna work over projected axes for each collision pair.
void main()
{
	uint collisionPairIdx = gl_WorkGroupID.x;
	uint edgeIdx = gl_LocalInvocationIndex.x;
}
