#version 430
#extension GL_ARB_shader_storage_buffer_object : require

precision highp float;

#define NUM_COLLIDER_VERTS 8u
#define MAX_NUM_COLLIDERS 1000u
#define MAX_NUM_PROJ_AXES 1000u

layout(local_size_x = MAX_NUM_PROJ_AXES) in;

struct BoxCollider
{
	vec4 vertices[NUM_COLLIDER_VERTS];
};

layout(std430, binding = 0) readonly buffer in_collider_data
{
	BoxCollider boxColliders[];
};

layout(std430, binding = 1) readonly buffer in_collision_pair_data
{
	vec4 collisionPairs[2 * MAX_NUM_COLLIDERS];
};

layout(std430, binding = 2) writeonly buffer out_mtv_data
{
	vec4 Mtvs[MAX_NUM_COLLIDERS];
};

// We gonna work over projected axes for each collision pair.
void main()
{
	uint collisionPairIdx = gl_WorkGroupID.x;
	uint edgeIdx = gl_LocalInvocationIndex.x;
}
